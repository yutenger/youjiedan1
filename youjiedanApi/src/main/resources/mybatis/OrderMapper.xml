<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace:命名空间 -->
<mapper namespace="com.stardai.manage.mapper.OrderMapper">

	<!-- 查询状态对应的时间 -->
	<select id="queryAllStatus" resultType="com.stardai.manage.pojo.OrderTime">
		SELECT
		id,status,order_time
		from
		yjd_order_time
	</select>




	<!-- 字段转换 -->
	<select id="getFieldTransformation" resultType="com.stardai.manage.pojo.FieldTransformation">
		SELECT
		only_code,value
		from
		yjd_loan_db
		UNION
		SELECT
		only_code,value
		from
		yjd_loan_db_new
	</select>


	<!-- 以下是订单首页对单子进行筛选的语句 （1.5.0版本启用,订单类型可多选） -->
	<!-- 查询所有单子(1.5.0版本启用) -->
	<select id="queryAllOrdersByManyConditions"
		resultType="com.stardai.manage.response.ResponseLoanUserInitialList">
		<include refid="query_loan_info_list" />
		<include refid="change_conditions" />
	</select>

	<!-- 根据条件能查询最新的单子 最新的单子=数据库存的时间>现在时间-设定最新的时间(1.5.0版本启用) -->
	<select id="queryZuiXinOrdersByManyConditions"
		resultType="com.stardai.manage.response.ResponseLoanUserInitialList">
		<include refid="query_loan_info_list" />
		<![CDATA[ AND order_time > #{time} ]]>
		<include refid="change_conditions" />
	</select>

	<!-- 根据条件能查询打折优惠 打价的单子=数据库存的时间<现在时间-设定免费的时间 并且 数据库存的时间>现在时间-设定最新的时间 (1.5.0版本启用) -->
	<select id="queryDaZheOrdersByManyConditions"
		resultType="com.stardai.manage.response.ResponseLoanUserInitialList">
		<include refid="query_loan_info_list" />
		AND
		<if test="discountedState==1">
			(
		</if>
		<![CDATA[ (order_time > #{end} ]]>
		<![CDATA[ AND order_time < #{start})]]>
		<include refid="change_conditions" />
	</select>

	<!-- 根据条件能查询 1元的单子 1元的单子=数据库存的时间<现在时间-设定1元的时间(1.5.0版本启用) -->
	<select id="queryMianFeiOrdersByManyConditions"
		resultType="com.stardai.manage.response.ResponseLoanUserInitialList">
		<include refid="query_loan_info_list" />
		<![CDATA[ AND order_time < #{time} ]]>
		<include refid="change_conditions" />
	</select>

	<!-- 查询有没有对最新的单子进行打折 -->
	<select id="isDiscountForZuiXin" resultType="Double">
		SELECT
		IFNULL(discount,0)
		FROM
		yjd_neworder_discount
		WHERE
		#{currentTime} between
		begin_time and end_time
		AND
		discount_switch = 0
		and discount_type = 1
		UNION
		SELECT
		0
		LIMIT 1
	</select>

	<!-- 查询该订单是付多少星币抢的,只查原价单 -->
	<select id="getCostMoneyByOrderNo" resultType="Double">
		SELECT
		(amount-coupon_amount)
		FROM
		yjd_pay_outcome
		WHERE
		order_no = #{orderNo}
		and amount > 5
	</select>

	<!-- 查询当前时间抢满三单送的优惠券面额 -->
	<select id="queryAmountAccordingTime" resultType="Integer">
		SELECT
		coupon_amount
		from
		yjd_graborder_send_coupon
		where
		#{time} between begin_time and end_time
		and send_switch = 0
		and send_type = 1
	</select>

	<!-- 查看抢几单可参与抽奖 -->
	<select id="getOrderCountForLottery" resultType="Integer">
		SELECT
		order_count
		from
		yjd_graborder_send_coupon
		where
		#{time} between begin_time and end_time
		and send_switch = 0
		and send_type = 2
	</select>
	<!-- 查看抽奖排除日期 -->
	<select id="getOrderCountForLotteryExclusionDate" resultType="String">
		SELECT
		exclusion_date
		from
		yjd_graborder_send_coupon
		where
		#{time} between begin_time and end_time
		and send_switch = 0
		and send_type = 2
	</select>
	<!-- 查询此用户虚假退单的次数-->
	<select id="getFakeOrderCount" resultType="Integer">
		SELECT
		count(*)
		from
		yjd_order_refund
		where
		create_time >= DATE_FORMAT(DATE_ADD(curdate(),interval -day(curdate())+1 day), '%Y-%m-%d %H:%i:%s')
		 and create_time &lt; DATE_FORMAT(DATE_ADD(curdate()-day(curdate())+1,interval 1 month), '%Y-%m-%d %H:%i:%s')
		and is_done = 3
		and user_id = #{userId}
	</select>

    <select id="getIsRefundLimit" resultType="Integer">
		 select
		 count(1)
		 from
		 yjd_grab_disabled
		 where
         refund_fail_time>#{currentTime}
         and
         is_deleted=0
         and
         user_id=#{userId}
	</select>
	<!--获取用户上次抢单的时间-->
	<select id="getLastGrabTime" resultType="Long">
		SELECT
		order_time
		from
		yjd_user_order
		where
	   user_id = #{userId}
	   order by order_time desc limit 1
	</select>

	<!--获取此订单的时间-->
	<select id="getOrderTimeByOrderNo" resultType="Long">
		SELECT
		order_time
		from
		yjd_loan_info
		where
	   order_no = #{orderNo}
	</select>
    <update id="updatePhoneByOrderNo">
		update
		yjd_loan_info
		set
		loan_phone=#{loanPhone}
		where
		order_no=#{orderNo}
	</update>
	<select id="queryUrlByChannel" resultType="String">
		select
		url
		from
		yjd_phone_api
		where
		is_open=0
		and
		channel
		=#{channel}
	</select>


	<select id="queryUrlByOrderNo" resultType="String">
		select
		api_url
		from
		yjd_loan_info
		where
		order_no = #{orderNo}
	</select>





	<!-- 该片段是订单首页查询订单筛选功能的搜索语句的前半段 -->
	<sql id="query_loan_info_list">
		SELECT
		loan_name,loan_money,loan_term,loan_sex,
		loan_location,job,monthly_income,wage_payment_form,
		company_monthly_income,
		personal_house,
		personal_car,
		house_property,
		car_property,
		order_time,order_no,
		personal_shebao,
		personal_gongjijin,
		webank,is_native,
		house_assessment,car_assessment,status as ujdStatus,
		discounted_state
		FROM
		yjd_loan_info
		WHERE
		1 = 1
	</sql>

	<!-- 该片段是添加搜索条件用的 (1.5.0版本,订单筛选变成多选) -->
	<sql id="change_conditions">
		<if test="discountedState==1">
		or
		discounted_state=#{discountedState}
			)
		</if>
		and loan_money between  #{beginMoney} and #{endMoney}
		<if test="billStatus==1">
			AND status between 0 and 1
		</if>
		<if test="billStatus==2">
			AND status = 0
		</if>
		<if test="cities!=null ">
			AND loan_location in
			<foreach collection="cities" item="city" index="index" open="("
				close=")" separator=",">
				#{city}
			</foreach>
		</if>
		and (

		<if test="isChooseType == 2">
			1 = 1
		</if>
		<if test="isChooseType == 1">
			1 != 1
			<if test="daKaDai==1">
				or wage_payment_form between 4001 and 4002
			</if>
			<if test="sheBaoDai==1">
				or (personal_shebao between 7002 and 7004 OR
				personal_gongjijin between 8002 and 8004)
			</if>
			<if test="qiYeDai==1">
				or job = 2003
			</if>
			<if test="zhengJianDai==1">
				or is_native = 2301
			</if>
			<if test="youFangDai==1">
				or personal_house between 1101 and 1104
			</if>
			<if test="youCheDai==1">
				or personal_car between 1401 and 1404
			</if>
			<if test="weiLiDai==1">
				or webank not in("无","暂未填写")
			</if>
			<if test="baoDanDai==1">
				or loan_chit = 1700
			</if>
		</if>

		)
		ORDER BY order_time DESC
		LIMIT #{page},
		#{pageSize}
	</sql>






	<!-- 查询充值的金额与赠送的金额 -->
	<select id="queryRechargeMoney" resultType="com.stardai.manage.pojo.PayMoney">
		SELECT
		*
		from
		yjd_pay_money
	</select>


	<!-- 根据单子号查询订单的详细信息 -->
	<select id="queryOrderByOrderNo" resultType="com.stardai.manage.response.ResponseLoanUserInitial">
		SELECT
		loan_name,loan_money,loan_term,loan_location,job,loan_phone,loan_age,loan_sex,
		loan_oldcity,loan_married,loan_card,monthly_income,wage_payment_form
		,personal_shebao,
		personal_gongjijin,work_year,loan_chit,chit_situation,credit_card_status,loan_score,
		personal_house,house_address,house_pledge,personal_car,car_address,car_pledge,
		loan_debt,order_amount,order_time,zmxy,webank,tags,is_native,status,
		company_type,register_time,company_monthly_income,
		house_assessment,car_assessment,loan_phone_attribution,discounted_state,jiebei,degree,house_property,car_property
		from
		yjd_loan_info
		WHERE
		order_no = #{orderNo}
	</select>

	<!-- 查询此订单的原价 -->
	<select id="queryOrderPrice" resultType="com.stardai.manage.response.ResponseConfirmPrice">
		SELECT
		order_amount,
		order_time,
		channel,
		channel_branch,
		valid,
		discounted_state
		from
		yjd_loan_info
		WHERE
		order_no =
		#{orderNo}
	</select>




	<!-- 将订单储存到抢单人的数据中 -->
	<insert id="addOrderByUserId">
		INSERT INTO yjd_user_order (
		user_id,
		order_no,
		order_price,
		order_time,
		create_time,
		grab_ip
		)
		VALUES
		(
		#{userId},
		#{orderNo},
		#{price},
		#{time},
		now(),
		#{ip}
		);
	</insert>

	<!-- 根据userId查询订单 -->
	<select id="queryOrderListByUserId" resultType="com.stardai.manage.response.ResponseOrderList">
		SELECT
		ul.loan_name  loanName,
		ul.loan_money   loanMoney,
		ul.loan_term   loanTerm,
		ul.loan_location  loanLocation,
		ul.loan_phone  loanPhone,
		(select value from yjd_loan_db where only_code = ul.job) as job,
		uo.order_time  orderTime,
		uo.order_no  orderNo,
		uo.`status` status
		FROM
		yjd_user_order uo
		LEFT JOIN yjd_loan_info ul ON ul.order_no = uo.order_no
		WHERE
		uo.user_id=#{userId}
		<if test="status == 0">
			AND uo.status = #{status}
		</if>
		<if test="status == 1">
			AND uo.status != 0
		</if>
		ORDER BY
		uo.order_time DESC
		LIMIT #{page},
		#{pageSize}
	</select>


	<!-- 根据userId查询订单 -->
	<select id="queryOrderByUserId" resultType="com.stardai.manage.response.ResponseLoanUserInitial">
		SELECT
		ul.order_no,
		ul.loan_name,
		ul.loan_phone,
		ul.loan_money,
		ul.loan_term,
		ul.loan_age,
		ul.loan_oldcity,
		ul.loan_location,
		ul.loan_married,
		ul.job,
		ul.wage_payment_form,
		ul.monthly_income,
		ul.work_year,
		ul.personal_shebao,
		ul.personal_gongjijin,
		ul.house_property,
		ul.personal_house,
		ul.house_address,
		ul.house_pledge,
		ul.personal_car,
		ul.car_property,
		ul.car_address,
		ul.car_pledge,
		ul.loan_debt,
		ul.loan_chit,
		ul.chit_situation,
		ul.credit_card_status,		
		ul.order_no,
		ul.zmxy,
		ul.webank,
		ul.tags,
		ul.is_native,
		ul.company_type,
		ul.register_time,
		ul.company_monthly_income,
		ul.house_assessment,
		ul.car_assessment,
		ul.loan_phone_attribution,
		ul.degree,
		uo.order_time,
		uo.`status`
		FROM
		yjd_user_order uo
		left join
		yjd_loan_info ul
		on
		ul.order_no = uo.order_no
		where 
		uo.user_id = #{userId}
		AND
		uo.order_no =#{orderNo}
		
	</select>

	<!--跟单成功反馈 -->
	<update id="feedBackSuccess">
		UPDATE yjd_user_order
		SET
		order_success_amount =
		#{orderSuccesAmount},
		order_success_term = #{orderSuccessTerm},
		order_success_time = #{orderSuccessTime},
		order_evaluate =
		#{orderEvaluate},
		submit_time = now(),
		status = 1
		WHERE
		user_id =
		#{userId}
		AND
		order_no
		=#{orderNo}
	</update>

	<!--跟单失败反馈 -->
	<update id="feedBackBad">
		UPDATE yjd_user_order
		SET
		order_bad_cause =
		#{orderBadCause},
		order_evaluate = #{orderEvaluate},
		submit_time =
		now(),
		status = 2
		WHERE
		user_id = #{userId}
		AND
		order_no =#{orderNo}
	</update>


	<!-- 将信贷经理提交的退款申请保存到数据库 -->
	<insert id="insertRefundApplication" parameterType="com.stardai.manage.request.RequestRefundApplication">
		INSERT INTO
		yjd_order_refund (
		user_id,
		mobile_number,
		loan_phone,
		order_no,
		order_price,
		reason,
		description,
		is_done,
		create_time,
		image_url
		)
		VALUES
		(#{userId},#{mobileNumber},#{loanPhone},#{orderNo},#{orderPrice},#{reason},#{description},#{status},now(),#{imageUrl});
	</insert>

	<!-- 查询该订单是否曾经退款过了 -->
	<select id="queryRefundApplicationByOrderNo" resultType="Integer">
		SELECT
		COUNT(1)
		FROM
		yjd_order_refund
		WHERE
		order_no = #{orderNo}
	</select>

	<!-- 查询该订单退款状态 -->
	<select id="queryRefundStatusByOrderNo" resultType="Integer">
		SELECT
		is_done
		FROM
		yjd_order_refund
		WHERE
		order_no = #{orderNo}
	</select>
	<!-- 查询该订单是付多少星币抢的 -->
	<select id="queryGrabbedOrderPrice" resultType="Double">
		SELECT
		order_price
		FROM
		yjd_user_order
		WHERE
		order_no = #{orderNo}
	</select>


	<!--跟单成功反馈 -->
	<update id="setPhoneAttribution">
		UPDATE yjd_loan_info
		SET
		loan_phone_attribution =
		#{loanPhoneAttribution}
		WHERE
		order_no
		=#{orderNo}
	</update>
	<!-- 查询该订单是否与该userId匹配 -->
	<select id="queryOrderIdMatch" resultType="Integer">
		SELECT
		count(1)
		FROM
		yjd_user_order
		WHERE
		order_no = #{orderNo}
		and user_id=#{userId}
	</select>
	<!-- 查询该订单的退单详情 -->
	<select id="queryOrderRefundByOrderNo" resultType="com.stardai.manage.response.ResponseOrderRefund">
		SELECT
		*
		FROM
		yjd_order_refund
		WHERE
		order_no = #{orderNo}
	</select>
	<!-- 根据用户ID查询退单列表并分页 -->
	<select id="queryUserOrderListByUserId" resultType="com.stardai.manage.response.ResponseRefund">
		SELECT
		c.loan_name,
		b.create_time,
		a.order_no,
		b.is_done
		FROM
		yjd_user_order a
		inner join
		yjd_order_refund b
		inner join
		yjd_loan_info c
		on
		a.order_no=b.order_no
		and
		a.order_no=c.order_no
		and
		a.user_id = b.user_id
		WHERE
		a.user_id = #{userId}
		order by
		b.create_time desc
		limit
		#{offset},#{pageSize}
	</select>

	<!-- 查询是否给此人送过抢单优惠券 -->
	<select id="querySendCoupons" resultType="integer">
		SELECT
		count(1)
		FROM
		yjd_graborder_send_statistics
		WHERE
		user_id = #{userId}
	</select>


	<!--更新用户获取的优惠券数量（满30-15优惠券） -->
	<update id="updateLimitCouponForUser">
		UPDATE yjd_graborder_send_statistics
		SET
		coupon_limit = coupon_limit + 1,
		update_time =
		now()
		WHERE
		user_id = #{userId}
	</update>


	<!-- 添加一条新数据更新用户获取的优惠券数量（50满减优惠券） -->
	<update id="updateNoLimitCouponForUser">
		UPDATE yjd_graborder_send_statistics
		SET
		coupon_nolimit = coupon_nolimit + 1,
		update_time = now()
		WHERE
		user_id = #{userId}
	</update>

	<!--更新用户抢单数量 -->
	<update id="updateOrderAmountForUser">
		UPDATE yjd_graborder_send_statistics
		SET
		order_amount =
		order_amount + 1,
		update_time =
		now()
		WHERE
		user_id = #{userId}
	</update>


	<!-- 添加一条用户抢单数据 -->
	<insert id="addOrderAmountForUser" parameterType="string">
		INSERT INTO
		yjd_graborder_send_statistics (
		user_id,
		order_amount,
		create_time,
		update_time
		)
		VALUES
		(#{userId},1,now(),now());
	</insert>

	<!-- 查看是否对限定城市进行打折 -->
	<select id="isDiscountForLimitCity" resultType="hashmap">
		SELECT
		discount,
		limit_city as limitCity
		FROM
		yjd_neworder_discount
		WHERE
		#{now} between
		begin_time and end_time
		AND
		discount_switch = 0
		and discount_type = 3
	</select>






	<!--更新此用户的抽奖机会 -->
	<update id="updateLotteryChance">
		UPDATE yjd_graborder_get_lottery
		SET
		left_count = left_count + 1,
		total_count = total_count + 1,
		update_time = now()
		WHERE
		user_id = #{userId}
		AND
		create_date = #{today}
	</update>


	<!--添加用户的抽奖机会 -->
	<insert id="addLotteryChance" parameterType="String">
		INSERT INTO
		yjd_graborder_get_lottery (
		user_id,
		left_count,
		total_count,
		create_date,
		update_time
		)
		VALUES
		(#{userId},0,0,now(),now());
	</insert>

	<!-- 查询抽奖机会获得表里是否存在 -->
	<select id="isHaveLotteryChance" resultType="Integer">
		SELECT
		left_count
		FROM
		yjd_graborder_get_lottery
		WHERE
		user_id = #{userId}
		and
		create_date = #{today}
	</select>

	<!-- 获取此人剩余的抽奖机会 -->
	<select id="getLotteryChance" resultType="hashmap">
		SELECT
		total_count as totalCount,
		left_count as leftCount
		FROM
		yjd_graborder_get_lottery
		WHERE
		user_id = #{userId}
		and
		create_date = #{today}
	</select>

	<!--此用户的抽奖机会-1 -->
	<update id="reviseLotteryChance">
		UPDATE yjd_graborder_get_lottery
		SET
		left_count = left_count - 1,
		update_time = now()
		WHERE
		user_id = #{userId}
		AND
		create_date = #{today}
	</update>



</mapper>