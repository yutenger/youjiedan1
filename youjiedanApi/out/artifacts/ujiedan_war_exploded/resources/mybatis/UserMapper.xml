<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace:命名空间 -->
<mapper namespace="com.stardai.manage.mapper.UserMapper">



    <!-- 根据userId查找密码 -->
    <select id="getPasswordByUserId" resultType="String">
        select password from
        yjd_user_info where user_id = #{userId}
    </select>

    <!-- 根据手机号查找用户 -->
    <select id="checkUser" resultType="com.stardai.manage.pojo.User">
        select * from yjd_user_info where
        mobile_number = #{mobileNumber}
    </select>

    <!-- 注册用户添加信息 -->
    <insert id="addUserInfo">
        INSERT INTO yjd_user_info (
        user_id,
        password,
        mobile_number,
        create_time,
        initial_phone
        )
        VALUES
        (
        #{userId},
        #{password},
        #{mobileNumber},
        now(),
        #{mobileNumber}
        );
    </insert>

    <!-- 注册用户时同时添加用户和邀请人userId的信息 -->
    <insert id="addUserInfoAndSharedId">
        INSERT INTO yjd_user_info (
        user_id,
        password,
        mobile_number,
        shared_id,
        create_time
        )
        VALUES
        (
        #{userId},
        #{password},
        #{mobileNumber},
        #{sharedId},
        now()
        );
    </insert>

    <!-- 登录查询是否存在用户 -->
    <select id="getUser" resultType="com.stardai.manage.response.ResponseUser">
        SELECT
        user_id,
        avatar,
        mobile_number,
        role,
        approve_person,
        approve_company,
        cities,
        has_approved,
        punishment_status,
        punish_code
        FROM
        yjd_user_info
        WHERE
        mobile_number = #{mobileNumber}
        AND
        password = #{password}
        and
        is_deleted = 0
    </select>

    <!-- 验证码登录，根据手机号查询用户的具体信息 -->
    <select id="getUserInfoByPhone" resultType="com.stardai.manage.response.ResponseUser">
        SELECT
        user_id,
        password as pwd,
        avatar,
        mobile_number,
        role,
        approve_person,
        approve_company,
        cities,
        has_approved,
        punishment_status,
        punish_code,
        vertify_token as token
        FROM
        yjd_user_info
        WHERE
        mobile_number = #{mobileNumber}
        and
        is_deleted = 0
    </select>

    <!-- 修改头像 -->
    <update id="updateAvatar">
        UPDATE yjd_user_info
        SET
        avatar = #{imgurl}
        WHERE
        user_id =
        #{userId}
    </update>

    <!-- 实名认证添加数据 -->
    <update id="updateUserInfo">
        UPDATE yjd_user_info
        SET
        user_name=#{userName},
        sex=#{sex},
        address=#{address},
        id_card=#{idCard},
        role=#{role},
        approve_person=1
        WHERE
        user_id = #{userId}
    </update>


    <!-- 反馈 -->
    <insert id="submitFeedback">
        INSERT INTO yjd_user_feedback (
        user_id,
        content,
        phone_number,
        create_time
        )
        VALUES
        (
        #{userId},
        #{content},
        #{phoneNumber},
        now()
        );
    </insert>


    <!-- 根据userId查找密码 -->
    <select id="queryNameByUserId" resultType="String">
        select
        user_name
        from
        yjd_user_info where user_id = #{userId}
    </select>

    <!-- 根据userId查找手机号 -->
    <select id="getPhoneNumberByUserId" resultType="String">
        select
        mobile_number
        from
        yjd_user_info where user_id = #{userId}
    </select>


    <!-- 企业认证 -->
    <update id="updateApproveCompany">
        UPDATE yjd_user_company
        SET
        company_city = #{companyCity},
        company_address = #{companyAddress},
        company_name = #{companyName},
        company_type = 	#{companyType},
        company_branch = #{companyBranch},
        company_images = #{images},
        create_time=now()
        WHERE
        user_id = #{userId}
    </update>

    <!-- 修改企业认证状态 -->
    <update id="updateApproveCompanyOnUser">
        UPDATE yjd_user_info
        SET
        approve_company=2
        WHERE
        user_id =
        #{userId}
    </update>

    <!-- 查询企业认证状态 -->
    <select id="queryApproveCompanyByUserId" resultType="Integer">
        select
        approve_company from
        yjd_user_info where user_id = #{userId}
    </select>

    <!-- 查询是否曾经通过企业认证 -->
    <select id="queryHasApproved" resultType="Integer">
        select
        has_approved
        from
        yjd_user_info
        where
        user_id = #{userId}
    </select>


    <!-- 注册用户添加信息 -->
    <insert id="addApproveCompany">
        INSERT INTO yjd_user_company (
        user_id,
        company_city,
        company_address,
        company_name,
        company_type,
        company_branch,
        company_images,
        create_time
        )
        VALUES
        (
        #{userId},
        #{companyCity},
        #{companyAddress},
        #{companyName},
        #{companyType},
        #{companyBranch},
        #{images},
        now()
        );
    </insert>

    <!-- 修改密码 -->
    <update id="updatePassWord">
        UPDATE yjd_user_info
        SET
        password = #{password}
        WHERE
        (
        mobile_number = #{mobileNumber}
        );
    </update>

    <!-- 阅读消息 -->
    <update id="updatePersonalMessage">
        UPDATE yjd_user_message
        SET
        status = 1
        WHERE
        (
        id = #{id}
        AND
        user_id = #{userId}
        );
    </update>

    <!-- 获得个人未读的消息 -->
    <select id="queryPersonalMessage" resultType="com.stardai.manage.response.ResponsePersonalMessage">
        select
        id,
        message_title,
        message,
        status,
        type,
        DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') create_time
        from
        yjd_user_message
        where user_id =
        #{userId}
        ORDER BY status ASC, id DESC
        LIMIT #{page},
        #{pageSize}
    </select>

    <!-- 获得个人未读的消息数量 -->
    <select id="queryPersonalMessageAmount" resultType="Integer">
        select
        count(*)
        from
        yjd_user_message
        where user_id =
        #{userId}
       and status = 0
    </select>

    <!-- 一键已读所有的消息 -->
    <update id="setAllMessageRead" >
       update
        yjd_user_message
        set status = 1
        where user_id =
        #{userId}
       and status = 0
    </update>


    <!-- 根据userId查询此人有没有认证 -->
    <select id="queryApproveByUserId" resultType="com.stardai.manage.response.ResponseApprove">
        select
        approve_person,
        approve_company
        from
        yjd_user_info
        where user_id = #{userId}
    </select>

    <!-- 根据userId查询此人钱包余额 -->
    <select id="queryMoneyByUserId" resultType="com.stardai.manage.pojo.PayWallet">
        select
        id,user_id,m_recharge,m_present
        from
        yjd_pay_wallet
        where user_id = #{userId}
    </select>

    <!-- 查询公告通知 -->
    <select id="querySystemMessage" resultType="com.stardai.manage.pojo.UserSystemMessage">
        select
        id,
        title,
        picture_url,
        url,
        DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') create_time,
        status,
        priority
        from
        yjd_user_system_message
        WHERE
        status != 0
        ORDER BY
        status ASC,
        create_time DESC
        LIMIT #{page},
        #{pageSize}
    </select>

    <!--根据UserID查询企业认证 -->
    <select id="queryApproveCompany" resultType="Integer" >
        select
        approve_company
        from
        yjd_user_info
        where user_id = #{userId}
    </select>

    <!-- 查询用户对于订单推送的相关设置 -->
    <select id="queryUserPush" resultType="com.stardai.manage.pojo.UserPush" >
        SELECT
            `id`,
            `user_id`,
            `push_time`,
            `push_able`,
            `followed_city_one`,
            `followed_city_two`,
            `followed_city_three`,
            `followed_city_four`,
            `followed_city_five`,
            `create_time` datetime,
            `update_time` datetime
        FROM
            yjd_user_push
        where user_id = #{userId}
    </select>

    <!-- 查询用户实名认证的公司所在城市,用户给推送订单的城市默认赋值 -->
    <select id="queryCompanyCity" resultType="String" >
        SELECT
        company_city
        FROM
        yjd_user_company
        where user_id = #{userId}
    </select>

    <!-- 新增用户接收订单推送数据记录 -->
    <insert id="insertUserPush" parameterType="com.stardai.manage.pojo.UserPush" >
        INSERT INTO yjd_user_push (
        user_id,
        push_time,
        push_able,
        followed_city_one,
        create_time
        )
        VALUES
        (
        #{userPush.userId},
        DEFAULT,
        DEFAULT,
        #{userPush.followedCityOne},
        now()
        )
    </insert>

    <!-- 更新用户接收订单推送的设置 -->
    <update id="updateUserPush" parameterType="com.stardai.manage.pojo.UserPush">
        UPDATE yjd_user_push
        SET
        push_time = #{userPush.pushTime},
        push_able = #{userPush.pushAble},
        followed_city_one = #{userPush.followedCityOne},
        update_time = now()
        WHERE
        user_id = #{userPush.userId}
    </update>

    <!-- 将身份证手机姓名三要素认证结果保存到数据库 -->
    <insert id="insertMobileApproveResult">
        INSERT INTO yjd_user_extended (
        user_id,
        approve_mobile,
        approve_msg,
        idcard_front_image,
        idcard_back_image,
        approve_face_image,
        create_time,
        update_time,
        is_deleted
        )
        VALUES
        (
        #{userId},
        #{res},
        #{resmsg},
        #{idCardFrontImage},
        #{idCardBackImage},
        #{image},
        now(),
        now(),
        0
        )
    </insert>

    <!-- 查询该身份证号是否已经被用于认证 -->
    <select id="checkUserIdCard" resultType="Integer" >
        SELECT
        count(1)
        FROM
        yjd_user_info
        where id_card = #{idCard}
    </select>
    
    <!-- 查实名认证信息 -->
    <select id="queryApproveData" resultType="com.stardai.manage.response.ResponseApproveData">
         SELECT
        yuc.company_city,
        yuc.company_name,
        yuc.company_address,
        yuc.company_branch,
        yuc.company_type,
        yuc.create_time,
        yue.certification_phone,
        yue.popup_reason
        FROM
        yjd_user_company yuc LEFT JOIN yjd_user_extended yue
        on
		yuc.user_id = yue.user_id 
		where
        yuc.user_id = #{userId}
    </select>
    
    
    <!-- 添加用户的实名手机号 -->
    <update id="updateCfPhoneOnUser">
        UPDATE yjd_user_extended
        SET
        certification_phone = #{certificationPhone},
        update_time = now()
        WHERE
        user_id = #{userId}
    </update>
  
    
    <!-- 返回公司名称及对应的简称，首字母（1.4.0版本加热门公司） -->
    <select id="getAllCompanyNames" resultType="HashMap">
        select
        first_letter as firstLetter,
        full_name as fullName,
        short_name  as shortName
        from
        yjd_user_companyname 
        ORDER BY
		first_letter,full_name
    </select>

    <!-- 更新用户token -->
    <update id="updateUserToken">
        UPDATE yjd_user_info
        SET
        vertify_token = #{token},
        punishment_status = 0,
        login_time = now()
        WHERE
        user_id =
        #{userId}
    </update>

    <!-- 更新用户的惩罚状态和登录时间 -->
    <update id="updateUserLoginStatus">
        UPDATE yjd_user_info
        SET
        punishment_status = 0,
        login_time = now()
        WHERE
        user_id =
        #{userId}
    </update>

    <!-- 根据userId查找密码 -->
    <select id="getTokenByUserId" resultType="String">
        select
        vertify_token
        from
        yjd_user_info where user_id = #{userId} and is_deleted = 0
    </select>

    <!-- 根据手机号码查询用户id -->
    <select id="getUserIdByMobileNumber" resultType="String">
        select
        user_id
        from
        yjd_user_info where mobile_number = #{mobileNumber} and is_deleted = 0
    </select>

    <!-- 根据 -->
    <update id="updatePhoneByUserId">
        UPDATE yjd_user_info
        SET
        mobile_number = #{mobileNumber}
        WHERE
        user_id = #{userId} and is_deleted = 0
    </update>

    <!-- 将身份证手机姓名三要素认证结果保存到数据库 -->
    <insert id="addChangePhoneRecord">
        INSERT INTO yjd_user_change_phone_record  (
        user_id,
        old_phone,
        new_phone,
        create_time
        )
        VALUES
        (
        #{userId},
        #{oldNumber},
        #{mobileNumber},
        now()
        )
    </insert>

    <!-- 根据用户当前登陆的手机号码，查找他最初注册app的手机号 -->
    <select id="getInitialPhoneByNowPhone" resultType="String">
        select
        initial_phone
        from
        yjd_user_info where mobile_number = #{mobileNumber}
    </select>

    <!-- 登录查询是否存在用户 -->
    <select id="getUserCardAndNameByUserId" resultType="com.stardai.manage.response.ResponseUserCardAndName">
        SELECT
        user_name,
        id_card
        FROM
        yjd_user_info
        WHERE
        user_id = #{userId}
        and
        is_deleted = 0
    </select>

    <!-- 添加用户的实名手机号 -->
    <select id="getUserExistFromExtended" resultType="Integer">
        select count(1)
        from yjd_user_extended
        WHERE
        user_id = #{userId}
    </select>

    <!-- 更新库里用户更新手机号上传的人脸图片 -->
    <update id="updateUserFaceImage">
        UPDATE yjd_user_extended
        SET
        change_phone_face_image = #{image},
        update_time = now()
        WHERE
        user_id = #{userId}
    </update>

    <!-- 插入用户更新手机号上传的人脸图片-->
    <insert id="insertUserFaceImage">
        INSERT INTO yjd_user_extended  (
        user_id,
        approve_mobile,
        approve_msg,
        change_phone_face_image,
        create_time,
        update_time
        )
        VALUES
        (
        #{userId},
        1,
        '三要素身份验证一致',
        #{image},
        now(),
        now()
        )
    </insert>

    <!-- 根据userId 查询是否对该用户有处罚措施 -->
    <select id="getPunishCodeByUserId" resultType="HashMap">
        select
        punish_code as punishCode,
        punishment_status as punishmentStatus
        from
        yjd_user_info
        where
        user_id = #{userId}
        and is_deleted = 0
    </select>

    
</mapper>